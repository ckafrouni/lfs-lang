#[derive(Debug, PartialEq)]
pub enum Keyword {
    KwAs,
    KwBreak,
    KwConst,
    KwContinue,
    KwCrate,
    KwElse,
    KwEnum,
    KwExtern,
    KwFalse,
    KwFn,
    KwFor,
    KwIf,
    KwImpl,
    KwIn,
    KwLet,
    KwLoop,
    KwMatch,
    KwMod,
    KwMove,
    KwMut,
    KwPub,
    KwRef,
    KwReturn,
    KwSelfValue,
    KwSelfType,
    KwStatic,
    KwStruct,
    KwSuper,
    KwTrait,
    KwTrue,
    KwType,
    KwUnsafe,
    KwUse,
    KwWhere,
    KwWhile,

    TokenError(String),
}

/// Convert a string to a keyword
impl From<&str> for Keyword {
    fn from(s: &str) -> Self {
        match s {
            "as" => Keyword::KwAs,
            "break" => Keyword::KwBreak,
            "const" => Keyword::KwConst,
            "continue" => Keyword::KwContinue,
            "crate" => Keyword::KwCrate,
            "else" => Keyword::KwElse,
            "enum" => Keyword::KwEnum,
            "extern" => Keyword::KwExtern,
            "false" => Keyword::KwFalse,
            "fn" => Keyword::KwFn,
            "for" => Keyword::KwFor,
            "if" => Keyword::KwIf,
            "impl" => Keyword::KwImpl,
            "in" => Keyword::KwIn,
            "let" => Keyword::KwLet,
            "loop" => Keyword::KwLoop,
            "match" => Keyword::KwMatch,
            "mod" => Keyword::KwMod,
            "move" => Keyword::KwMove,
            "mut" => Keyword::KwMut,
            "pub" => Keyword::KwPub,
            "ref" => Keyword::KwRef,
            "return" => Keyword::KwReturn,
            "self" => Keyword::KwSelfValue,
            "Self" => Keyword::KwSelfType,
            "static" => Keyword::KwStatic,
            "struct" => Keyword::KwStruct,
            "super" => Keyword::KwSuper,
            "trait" => Keyword::KwTrait,
            "true" => Keyword::KwTrue,
            "type" => Keyword::KwType,
            "unsafe" => Keyword::KwUnsafe,
            "use" => Keyword::KwUse,
            "where" => Keyword::KwWhere,
            "while" => Keyword::KwWhile,
            _ => Keyword::TokenError(s.to_string()),
        }
    }
}